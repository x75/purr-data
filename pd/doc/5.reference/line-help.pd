#N canvas 323 74 555 619 10;
#X obj 0 595 cnv 15 552 21 empty \$0-pddp.cnv.footer empty 20 12 0
14 -228856 -66577 0;
#X obj 0 0 cnv 15 552 40 empty \$0-pddp.cnv.header line 3 12 0 18 -204280
-1 0;
#X obj 0 230 cnv 3 550 3 empty \$0-pddp.cnv.inlets inlets 8 12 0 13
-228856 -1 0;
#N canvas 565 371 494 364 META 0;
#X text 12 125 LIBRARY internal;
#X text 12 165 WEBSITE http://crca.ucsd.edu/~msp/;
#X text 12 25 LICENSE SIBSD;
#X text 12 145 AUTHOR Miller Puckette;
#X text 12 205 HELP_PATCH_AUTHORS This help patch was updated for Pd
version 0.35 test 28 by Dave Sabine as part of a project called pddp
proposed by Krzysztof Czaja to build comprehensive documentation for
Pd. Jonathan Wilkes revised the patch to conform to the PDDP template
for Pd version 0.42.;
#X text 12 45 DESCRIPTION ramp generator;
#X text 12 65 INLET_0 float list stop;
#X text 12 85 INLET_1 float;
#X text 12 105 OUTLET_0 float;
#X text 12 185 RELEASE_DATE 1997;
#X text 12 5 KEYWORDS control time;
#X restore 500 598 pd META;
#X obj 0 418 cnv 3 550 3 empty \$0-pddp.cnv.outlets outlets 8 12 0
13 -228856 -1 0;
#X obj 0 462 cnv 3 550 3 empty \$0-pddp.cnv.argument arguments 8 12
0 13 -228856 -1 0;
#X obj 0 521 cnv 3 550 3 empty \$0-pddp.cnv.more_info more_info 8 12
0 13 -228856 -1 0;
#N canvas 297 500 428 230 Related_objects 0;
#X obj 1 1 cnv 15 425 20 empty \$0-pddp.cnv.subheading empty 3 12 0
14 -204280 -1 0;
#X obj 22 43 line~;
#X obj 62 43 vline~;
#X text 8 2 [line] Related Objects;
#X text 19 102 Externals;
#X obj 19 142 pddp/helplink markex/tripleLine;
#X obj 19 162 pddp/helplink iemlib/t3_line~;
#X obj 19 182 pddp/helplink iemlib/fade~;
#X obj 19 122 pddp/helplink maxlib/step;
#X restore 101 598 pd Related_objects;
#X obj 78 239 cnv 17 3 83 empty \$0-pddp.cnv.let.0 0 5 9 0 16 -228856
-162280 0;
#X text 98 238 float;
#X text 98 269 list;
#X text 98 426 float;
#X obj 78 427 cnv 17 3 17 empty \$0-pddp.cnv.let.0 0 5 9 0 16 -228856
-162280 0;
#X obj 78 327 cnv 17 3 17 empty \$0-pddp.cnv.let.1 1 5 9 0 16 -228856
-162280 0;
#X text 98 326 float;
#X obj 509 10 line;
#X obj 137 183 line;
#X msg 137 50 1000 1000;
#X floatatom 137 204 5 0 0 0 - - -, f 5;
#X msg 146 73 0 1000;
#X msg 158 117 stop;
#X msg 154 96 42;
#N canvas 315 171 428 446 continuous_ramps 0;
#X text 19 98 In other words \, if [line] receives a message specifying
some new target and time before reaching the previous target \, it
takes off from its current value.;
#X obj 26 247 hsl 128 15 0 127 0 0 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X msg 56 205 stop;
#X msg 49 185 42;
#X obj 23 226 line;
#X msg 23 144 127 5000;
#X msg 41 165 0 5000;
#X obj 30 392 line;
#X floatatom 30 413 10 0 0 0 - - -, f 10;
#X floatatom 30 326 5 0 0 0 - - -, f 5;
#X obj 30 372 pack f 500;
#X msg 71 325 50;
#X msg 79 346 2000;
#X obj 1 1 cnv 15 425 20 empty \$0-pddp.cnv.subheading empty 3 12 0
14 -204280 -1 0;
#X text 8 2 [line] Continuous Ramps;
#X text 21 37 If you send [line] a new target value mid-way through
a ramp \, a new ramp is immediately created to the new target value
starting from the "current" value.;
#X text 81 185 <-- will jump immediately to 42;
#X text 16 271 Due to this unique behavior \, a common construct found
in Pd patches includes the [pack] object as below:;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X restore 341 530 pd continuous_ramps;
#X text 11 23 ramp generator;
#X text 98 299 stop;
#X text 168 299 - stop the current ramp.;
#X text 167 326 - time to reach the target value (in milliseconds).
;
#X text 168 238 - target value. This value is stored and used as the
starting value for the next ramp.;
#X text 168 269 - a (target \, time) pair is distributed between the
two inlets.;
#N canvas 305 114 428 508 tips_on_using_line 0;
#X obj 42 269 line;
#X msg 76 238 1000;
#X msg 42 238 1000;
#X obj 42 192 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 42 212 t b b;
#X floatatom 42 291 5 0 0 0 - - -, f 5;
#X obj 150 270 line;
#X msg 150 238 1000;
#X obj 150 192 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X floatatom 150 292 5 0 0 0 - - -, f 5;
#X text 20 437 Having said all of that \, let's just reiterate that
it's important to send a "time" value to [line] before sending it a
new "target" value...unless of course you WANT it to jump immediately
to the new target.;
#X text 179 197 While this does NOT work unless;
#X text 179 211 you click "500" first.;
#X msg 184 238 500;
#X obj 1 1 cnv 15 425 20 empty \$0-pddp.cnv.subheading empty 3 12 0
14 -204280 -1 0;
#X text 8 2 [line] Tips;
#X text 20 125 It is important to realize that [line] stores only the
current value...it does not remember the defined "time" (duration of
the ramp). Hence \, the example to the left works:;
#X text 20 39 [line]'s left inlet defines the "target" value. The 2nd
inlet defines the "time" value. The "target \, time" pair of numbers
inform [line] to produce a numeric "ramp" from its current value (whatever
that might be at any given moment) to the new value within the alloted
time which is defined at the right inlet.;
#X text 20 316 If [line] receives a new target value without an accompanying
"time" \, it simply jumps to the new value as in the example above
on the right. In the example above on the left \, you'll see that [line]
will create a numeric ramp from 0 to 1000 over 1000 milliseconds. You
should also note that if you click that [bng] again a second time \,
it doesn't ramp from 0 to 1000 again. This is because [line] is already
at 1000 Sending it new instructions to ramp to 1000 will output a stream
of values that are all 1000;
#X connect 0 0 5 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 4 1 1 0;
#X connect 6 0 9 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 13 0 6 1;
#X restore 101 530 pd tips_on_using_line;
#X text 80 482 1) float;
#X text 80 497 2) float;
#X text 168 482 - initial value \, i.e. \, the starting point of the
first ramp.;
#X obj 3 598 pddp/pddplink all_about_help_patches.pd -text Usage Guide
;
#X obj 98 574 pddp/pddplink ../3.audio.examples/C03.zipper.noise.pd
-text doc/3.audio.examples/C03.zipper.noise.pd;
#X text 180 97 jump to this value immediately.;
#X text 203 49 ramp up over 1000 ms;
#X text 193 73 ramp down over 1000 ms;
#X text 195 117 stop the current ramp.;
#X obj 78 357 cnv 17 3 57 empty \$0-pddp.cnv.let.1 2 5 9 0 16 -228856
-162280 0;
#X text 98 356 float;
#X text 167 356 - grain size \, or how often messages get sent to the
outlet during the ramp (defaults to 20 ms). Note: there may be a shorter
delay before the final message in order to precisely match the total
ramp duration given from the 2nd inlet.;
#X text 168 497 - grain size in milliseconds (default: 20 ms).;
#X text 168 426 - [line] outputs a linear ramp \, reaching the target
value within the duration specified at the 2nd inlet.;
#N canvas 370 126 428 471 grain_size_and_creation_arguments 0;
#X text 22 125 This means simply that [line] will output a new value
between its current value and your new value once every 20 milliseconds.
;
#X text 22 101 The default grain rate is 20 milliseconds.;
#X obj 135 413 line 0 5;
#X obj 150 440 hsl 128 15 0 127 0 0 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X msg 136 272 127;
#X msg 168 272 0;
#X obj 135 308 pack f 5000;
#X obj 150 370 hsl 128 15 0 127 0 0 empty empty empty -2 -6 0 8 -262144
-1 -1 0 1;
#X obj 150 343 line 0 500;
#X obj 1 1 cnv 15 425 20 empty \$0-pddp.cnv.subheading empty 3 12 0
14 -204280 -1 0;
#X text 8 2 [line] Grain Rate;
#X text 22 39 The "grain size" of [line] defines how often it will
output its values. The smaller the grain is \, the smoother the ramp
will appear. Of course this setting will alter the amount of CPU that
the [line] object will require.;
#X text 19 223 Note that if the chosen grain rate doesn't divide evenly
into the total ramp duration \, the final "grain" will be smaller to
achieve the precise total ramp time.;
#X text 19 173 [line]'s optional 2nd creation arguments can be used
to reset the grain rate. It can also be set dynamically at the right
inlet.;
#X connect 2 0 3 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 0 8 0;
#X connect 8 0 7 0;
#X restore 101 552 pd grain_size_and_creation_arguments;
#N canvas 0 0 450 300 grain_size 0;
#X obj 83 23 loadbang;
#X msg 83 45 names 20 50 100 250;
#X obj 83 67 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 200 141 pd grain_size;
#X dropdown 200 163 6 1 0 0 - - -, f 6;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 19 0 16 0;
#X connect 20 0 16 0;
#X connect 21 0 16 0;
#X connect 45 0 46 0;
#X connect 46 0 16 2;
